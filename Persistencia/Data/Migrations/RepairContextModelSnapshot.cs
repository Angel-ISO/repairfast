// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(RepairContext))]
    partial class RepairContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Alquiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Alquiler")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("Fecha_Fin")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Fin");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Inicio");

                    b.Property<int>("Id_Automovil")
                        .HasColumnType("int")
                        .HasColumnName("Id_Automovil");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int")
                        .HasColumnName("Id_Cliente");

                    b.Property<decimal>("Precio_Total")
                        .HasColumnType("decimal")
                        .HasColumnName("Precio_Total");

                    b.HasKey("Id");

                    b.HasIndex("Id_Automovil");

                    b.HasIndex("Id_Cliente");

                    b.ToTable("Alquiler", (string)null);
                });

            modelBuilder.Entity("Dominio.Automovil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Automovil")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Año")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("año");

                    b.Property<string>("Capacidad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("capacidad");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("modelo");

                    b.Property<decimal>("Precio_Diario")
                        .HasColumnType("decimal")
                        .HasColumnName("preciodiario");

                    b.Property<string>("Tipo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("Automovil", (string)null);
                });

            modelBuilder.Entity("Dominio.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Cliente")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("apellido");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Dirrecion");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Dominio.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Empleado")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("apellido");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("cargo");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Dirrecion");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("dni");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("Empleado", (string)null);
                });

            modelBuilder.Entity("Dominio.RegistroDevolucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_RegDev")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Devolucion_Combustible")
                        .HasColumnType("decimal")
                        .HasColumnName("CombustibleDevuelto");

                    b.Property<DateTime>("Fecha_Devolucion")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Devolucion");

                    b.Property<int>("Id_Alquiler")
                        .HasColumnType("int")
                        .HasColumnName("Id_Alquiler");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int")
                        .HasColumnName("Id_Empleado");

                    b.Property<int>("Kilometraje_Devuelto")
                        .HasColumnType("int")
                        .HasColumnName("Kilometrajedevuelto");

                    b.Property<decimal>("Monto_Adicional")
                        .HasColumnType("decimal")
                        .HasColumnName("monto_Adicional");

                    b.HasKey("Id");

                    b.HasIndex("Id_Alquiler");

                    b.HasIndex("Id_Empleado");

                    b.ToTable("RegistrosDevolucion", (string)null);
                });

            modelBuilder.Entity("Dominio.RegistroEntrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_RegEntrega")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Combustible_Entregado")
                        .HasColumnType("decimal")
                        .HasColumnName("Combustibleentregado");

                    b.Property<DateTime>("Fecha_Entrega")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Entrega");

                    b.Property<int>("Id_Alquiler")
                        .HasColumnType("int")
                        .HasColumnName("Id_Alquiler");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int")
                        .HasColumnName("Id_Empleado");

                    b.Property<int>("Kilometraje_Entregado")
                        .HasColumnType("int")
                        .HasColumnName("Kilometrajentregado");

                    b.HasKey("Id");

                    b.HasIndex("Id_Alquiler");

                    b.HasIndex("Id_Empleado");

                    b.ToTable("RegistrosEntrega", (string)null);
                });

            modelBuilder.Entity("Dominio.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Reserva")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("Fecha_Fin")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Fin");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Inicio");

                    b.Property<DateTime>("Fecha_Reserva")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Reserva");

                    b.Property<int>("Id_Automovil")
                        .HasColumnType("int")
                        .HasColumnName("Id_Automovil");

                    b.Property<int>("Id_Client")
                        .HasColumnType("int")
                        .HasColumnName("Id_Cliente");

                    b.HasKey("Id");

                    b.HasIndex("Id_Automovil");

                    b.HasIndex("Id_Client");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("Dominio.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Sucursal")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Dirreccion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono");

                    b.HasKey("Id");

                    b.ToTable("sucursales", (string)null);
                });

            modelBuilder.Entity("Dominio.SucursarAutomovil", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id_Sucursales")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAutomovil")
                        .HasColumnType("int")
                        .HasColumnName("Id_Automovil");

                    b.Property<int>("Id_Cantidad_Disponible")
                        .HasColumnType("int")
                        .HasColumnName("id_CantidadDisponible");

                    b.HasKey("Id");

                    b.HasIndex("IdAutomovil");

                    b.ToTable("SucursalAutomovil", (string)null);
                });

            modelBuilder.Entity("Dominio.Alquiler", b =>
                {
                    b.HasOne("Dominio.Automovil", "Automovil")
                        .WithMany("Alquileres")
                        .HasForeignKey("Id_Automovil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Cliente", "cliente")
                        .WithMany("Alquileres")
                        .HasForeignKey("Id_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automovil");

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("Dominio.RegistroDevolucion", b =>
                {
                    b.HasOne("Dominio.Alquiler", "Alquiler")
                        .WithMany("RegistroDevoluciones")
                        .HasForeignKey("Id_Alquiler")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Empleado", "Empleado")
                        .WithMany("RegistroDevoluciones")
                        .HasForeignKey("Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alquiler");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Dominio.RegistroEntrega", b =>
                {
                    b.HasOne("Dominio.Alquiler", "Alquiler")
                        .WithMany("RegistroEntregas")
                        .HasForeignKey("Id_Alquiler")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Empleado", "Empleado")
                        .WithMany("RegistroEntregas")
                        .HasForeignKey("Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alquiler");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Dominio.Reserva", b =>
                {
                    b.HasOne("Dominio.Automovil", "Automovil")
                        .WithMany("Reservas")
                        .HasForeignKey("Id_Automovil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("Id_Client")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automovil");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.SucursarAutomovil", b =>
                {
                    b.HasOne("Dominio.Sucursal", "Sucursal")
                        .WithMany("SucursarAutomoviles")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Automovil", "Automovil")
                        .WithMany("SucursarAutomoviles")
                        .HasForeignKey("IdAutomovil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automovil");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("Dominio.Alquiler", b =>
                {
                    b.Navigation("RegistroDevoluciones");

                    b.Navigation("RegistroEntregas");
                });

            modelBuilder.Entity("Dominio.Automovil", b =>
                {
                    b.Navigation("Alquileres");

                    b.Navigation("Reservas");

                    b.Navigation("SucursarAutomoviles");
                });

            modelBuilder.Entity("Dominio.Cliente", b =>
                {
                    b.Navigation("Alquileres");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Dominio.Empleado", b =>
                {
                    b.Navigation("RegistroDevoluciones");

                    b.Navigation("RegistroEntregas");
                });

            modelBuilder.Entity("Dominio.Sucursal", b =>
                {
                    b.Navigation("SucursarAutomoviles");
                });
#pragma warning restore 612, 618
        }
    }
}
